---
- name: installs cmake
  become: true
  become_user: "{{ ansible_env.USER }}"
  homebrew_cask:
    name:
      - cmake
    state: present
  ignore_errors: true

- name: install dependencies
  become: true
  become_user: "{{ ansible_env.USER }}"
  homebrew:
    name:
      - xclip
      - make
      - python
    state: latest

- name: check if nvim is installed
  stat:
    path: /usr/local/bin/nvim
  register: nvim_is_installed
  changed_when: not nvim_is_installed.stat.exists
  notify:
    - install nvim packages, lsps, debuggers, linters and formatters

- name: clone nvim repository
  become: true
  become_user: "{{ ansible_env.USER }}"
  git:
    repo: "https://github.com/neovim/neovim.git"
    dest: "{{ ansible_env.HOME }}/dev/neovim"
    version: "{{ nvim_release_branch }}"
    depth: 1
    clone: true
    update: true
    force: true

- name: build and install nvim
  become: true
  shell:
    cmd: |
      sudo make distclean
      sudo make CMAKE_BUILD_TYPE=RelWithDebInfo
      sudo make install
    chdir: "{{ ansible_env.HOME }}/dev/neovim"
  changed_when: false
  environment:
    PATH: "/opt/homebrew/bin:{{ ansible_env.PATH }}"

- name: ensure virtual environment is created
  command: python3 -m venv "{{ ansible_env.HOME }}/.nvimvenv"
  args:
    creates: "{{ ansible_env.HOME }}/.nvimvenv/bin/activate"
  environment:
    PATH: "/opt/homebrew/bin:{{ ansible_env.PATH }}"

- name: install pynvim in virtual environment
  pip:
    name: pynvim
    state: latest
    virtualenv: "{{ ansible_env.HOME }}/.nvimvenv"
  environment:
    PATH: "/opt/homebrew/bin:{{ ansible_env.PATH }}"

- name: install global npm packages required by neovim
  shell: "source {{ ansible_env.HOME }}/.nvm/nvm.sh && npm install -g {{ npm_package }}"
  args:
    executable: /bin/bash
  loop:
    - "tree-sitter-cli"
    - "neovim"
  loop_control:
    loop_var: npm_package
  changed_when: false

- name: create ~/.config directory
  become: true
  file:
    path: "{{ ansible_env.HOME }}/.config"
    state: directory
    mode: "0755"
    owner: "{{ ansible_env.USER }}"

- name: create nvim symlink
  file:
    src: "{{ ansible_env.HOME }}/.dotfiles/roles/nvim/files"
    dest: "{{ ansible_env.HOME }}/.config/nvim"
    owner: "{{ ansible_env.USER }}"
    state: link
    force: true
    follow: false
